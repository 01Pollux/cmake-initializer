name: Cross-Platform Builds

on:
  push:
    branches: [main, dev]
    tags:
      - '*'
  pull_request:
    branches: [main, dev]

jobs:
  test:
    name: Test (${{ matrix.config.name }})
    runs-on: ${{ matrix.config.os }}
    continue-on-error: false
    strategy:
      fail-fast: true  # Stop all jobs if any test fails
      max-parallel: 6
      matrix:
        config:
          - name: linux-x64-clang
            os: ubuntu-latest
            preset: unixlike-clang-debug
            test-preset: test-unixlike-clang-debug
            output: linux-x64-clang
          - name: linux-x64-gcc
            os: ubuntu-latest
            preset: unixlike-gcc-debug
            test-preset: test-unixlike-gcc-debug
            output: linux-x64-gcc

          - name: macOS-x64-clang
            os: macos-latest
            preset: unixlike-clang-debug
            test-preset: test-unixlike-clang-debug
            output: macOS-x64-clang
          - name: macOS-x64-gcc
            os: macos-latest
            preset: unixlike-gcc-debug
            test-preset: test-unixlike-gcc-debug
            output: macOS-x64-gcc

          - name: windows-x64-clang
            os: windows-latest
            preset: windows-clang-debug
            test-preset: test-windows-clang-debug
            output: windows-x64-clang
          - name: windows-x64-msvc
            os: windows-latest
            preset: windows-msvc-debug
            test-preset: test-windows-msvc-debug
            output: windows-x64-msvc

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Run ${{ matrix.config.name }} Tests
        uses: ./.github/actions/test/unix
        if: contains(matrix.config.os, 'ubuntu')
        with:
          config-name: ${{ matrix.config.name }}
          config-os: ${{ matrix.config.os }}
          config-preset: ${{ matrix.config.preset }}
          config-output: ${{ matrix.config.output }}

          ctest-site: ${{ secrets.CTEST_DASHBOARD_SITE }}
          ctest-location: ${{ secrets.CTEST_DASHBOARD_LOCATION }}
          ctest-test-timeout: ${{ secrets.CTEST_TEST_TIMEOUT_PRESET }}
          ctest-drop-method: ${{ secrets.CTEST_DROP_METHOD }}

      - name: Run ${{ matrix.config.name }} Tests
        uses: ./.github/actions/test/macos
        if: contains(matrix.config.os, 'macos')
        with:
          config-name: ${{ matrix.config.name }}
          config-os: ${{ matrix.config.os }}
          config-preset: ${{ matrix.config.preset }}
          config-output: ${{ matrix.config.output }}
          
          ctest-site: ${{ secrets.CTEST_DASHBOARD_SITE }}
          ctest-location: ${{ secrets.CTEST_DASHBOARD_LOCATION }}
          ctest-test-timeout: ${{ secrets.CTEST_TEST_TIMEOUT_PRESET }}
          ctest-drop-method: ${{ secrets.CTEST_DROP_METHOD }}

      - name: Run ${{ matrix.config.name }} Tests
        uses: ./.github/actions/test/windows
        if: contains(matrix.config.os, 'windows')
        with:
          config-name: ${{ matrix.config.name }}
          config-os: ${{ matrix.config.os }}
          config-preset: ${{ matrix.config.preset }}
          config-output: ${{ matrix.config.output }}

          ctest-site: ${{ secrets.CTEST_DASHBOARD_SITE }}
          ctest-location: ${{ secrets.CTEST_DASHBOARD_LOCATION }}
          ctest-test-timeout: ${{ secrets.CTEST_TEST_TIMEOUT_PRESET }}
          ctest-drop-method: ${{ secrets.CTEST_DROP_METHOD }}

  build:
    name: Build (${{ matrix.config.name }})
    runs-on: ${{ matrix.config.os }}
    needs: test  # Only run build after all tests pass
    continue-on-error: false
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        config:
          - name: linux-x64-clang
            os: ubuntu-latest
            preset: unixlike-clang-release
            output: linux-x64-clang
          - name: linux-x64-gcc
            os: ubuntu-latest
            preset: unixlike-gcc-release
            output: linux-x64-gcc

          - name: macOS-x64-clang
            os: macos-latest
            preset: unixlike-clang-release
            output: macOS-x64-clang
          - name: macOS-x64-gcc
            os: macos-latest
            preset: unixlike-gcc-release
            output: macOS-x64-gcc

          - name: windows-x64-clang
            os: windows-latest
            preset: windows-clang-release
            output: windows-x64-clang
          - name: windows-x64-msvc
            os: windows-latest
            preset: windows-msvc-release
            output: windows-x64-msvc

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Run ${{ matrix.config.name }} Build
        uses: ./.github/actions/build/unix
        if: contains(matrix.config.os, 'ubuntu')
        with:
          config-name: ${{ matrix.config.name }}
          config-os: ${{ matrix.config.os }}
          config-preset: ${{ matrix.config.preset }}
          config-output: ${{ matrix.config.output }}

      - name: Run ${{ matrix.config.name }} Build
        uses: ./.github/actions/build/macos
        if: contains(matrix.config.os, 'macos')
        with:
          config-name: ${{ matrix.config.name }}
          config-os: ${{ matrix.config.os }}
          config-preset: ${{ matrix.config.preset }}
          config-output: ${{ matrix.config.output }}

      - name: Run ${{ matrix.config.name }} Build
        uses: ./.github/actions/build/windows
        if: contains(matrix.config.os, 'windows')
        with:
          config-name: ${{ matrix.config.name }}
          config-os: ${{ matrix.config.os }}
          config-preset: ${{ matrix.config.preset }}
          config-output: ${{ matrix.config.output }}

  publish:
    runs-on: ubuntu-latest
    needs: [test, build]  # Depends on both test and build
    continue-on-error: false
    if: github.event_name == 'push' && github.ref_type == 'tag'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Publish Artifacts
        uses: ./.github/actions/publish
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
